---
openapi: 3.0.0
servers:
- description: Localhost
  url: http://localhost:3000/api/v1
info:
  description: Pegion API
  version: 1.0.0
  title: Pegion API
  contact:
    email: hello@codevedas.com
  license:
    name: MIT
    url: https://github.com/Code-Vedas/pigeon-api/blob/main/LICENSE.txt
tags:
- name: simple_auth
  description: Simple Auth API
- name: iam
  description: IAM API's
- name: iam_me
  description: IAM Me API's
- name: iam_avatar
  description: IAM Avatar API's
- name: auths
  description: Auth API's
- name: authenticated
  description: Authenticated API's
components:
  schemas:
    SimpleAuthLoginBody:
      type: object
      required:
      - username
      - password
      properties:
        username:
          type: string
        password:
          type: string
    UserAvatarUpdateBody:
      type: object
      properties:
        avatar:
          type: string
          format: binary
    UserUpdateBody:
      type: object
      properties:
        first_name:
          type: string
        last_name:
          type: string
    UserObject:
      type: object
      required:
      - first_name
      - last_name
      - full_name
      - avatar
      properties:
        first_name:
          type: string
        last_name:
          type: string
        full_name:
          type: string
        avatar:
          type: object
          required:
          - original
          - small
          - medium
          - type
          properties:
            original:
              type: string
            small:
              type: string
            medium:
              type: string
            type:
              type: string
    ErrorObject:
      type: object
      required:
      - message
      properties:
        message:
          type: string
        backtrace:
          type: string
    AccessObject:
      type: object
      required:
      - access_token
      - renew_token
      - expires_at
      properties:
        access_token:
          type: string
        renew_token:
          type: string
        expires_at:
          type: string
          format: datetime
  securitySchemes:
    authenticatedRequest:
      type: apiKey
      in: header
      name: ACCESS_TOKEN
paths:
  "/auth/simple_auth":
    post:
      tags:
      - auths
      - simple_auth
      summary: Login using Simple Auth
      operationId: simpleAuthLogin
      description: Login using Simple Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/SimpleAuthLoginBody"
      responses:
        '200':
          description: Successfull Login
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/AccessObject"
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorObject"
    delete:
      tags:
      - authenticated
      - simple_auth
      summary: Logout Simple Auth
      operationId: simpleAuthLogout
      description: Logout Simple Auth
      security:
      - authenticatedRequest: []
      responses:
        '200':
          description: Logout Successfull
        '403':
          description: Unauthenticated access
  "/iam/me":
    get:
      tags:
      - authenticated
      - iam
      - iam_me
      summary: Get log'd in user's profile
      operationId: iamMe
      description: Get log'd in user's profile
      security:
      - authenticatedRequest: []
      responses:
        '200':
          description: Successfully fetched profile
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/UserObject"
        '403':
          description: Unauthenticated access
    put:
      tags:
      - authenticated
      - iam
      - iam_me
      summary: Update Log'd in user profile
      operationId: iamMeUpdate
      description: Update Log'd in user profile
      security:
      - authenticatedRequest: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/UserUpdateBody"
      responses:
        '200':
          description: Update Successfull
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/UserObject"
        '403':
          description: Unauthenticated access
  "/iam/avatar":
    post:
      tags:
      - authenticated
      - iam
      - iam_avatar
      summary: Update User Avatar Image
      operationId: iamMeUpdateAvatarImage
      description: Update User Avatar Image
      security:
      - authenticatedRequest: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              "$ref": "#/components/schemas/UserAvatarUpdateBody"
      responses:
        '200':
          description: Avatar updated successfully
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/UserObject"
        '403':
          description: Unauthenticated access
    delete:
      tags:
      - authenticated
      - iam
      - iam_avatar
      summary: Remove User Avatar Image
      operationId: iamMeRemoveAvatarImage
      description: Remove User Avatar Image
      security:
      - authenticatedRequest: []
      responses:
        '200':
          description: Avatar removed successfully
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/UserObject"
        '403':
          description: Unauthenticated access
