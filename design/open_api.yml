---
openapi: 3.0.0
servers:
- description: Localhost
  url: http://localhost:3000/api/v1
info:
  description: Pegion API
  version: 1.0.0
  title: Pegion API
  contact:
    email: hello@codevedas.com
  license:
    name: MIT
    url: https://github.com/Code-Vedas/pigeon-api/blob/main/LICENSE.txt
tags:
- name: simple_auth
  description: Simple Auth API
- name: iam
  description: IAM API's
- name: iam_me
  description: IAM Me API's
- name: iam_avatar
  description: IAM Avatar API's
- name: auths
  description: Auth API's
- name: authenticated
  description: Authenticated API's
- name: organization
  description: Organization
- name: settings
  description: Settings
- name: teams
  description: Teams
- name: team_members
  description: Team Members
components:
  schemas:
    ArrayOfTeamMemberObject:
      type: array
      items:
        "$ref": "#/components/schemas/TeamMemberObject"
    TeamMemberObject:
      type: object
      properties:
        obj_id:
          type: string
        email:
          type: string
        first_name:
          type: string
        last_name:
          type: string
        full_name:
          type: string
        role:
          type: string
        avatar:
          type: object
          properties:
            original:
              type: string
            small:
              type: string
            medium:
              type: string
            type:
              type: string
    TeamMemberCreateBody:
      type: object
      required:
      - user_id
      - role
      properties:
        user_id:
          type: string
        role:
          type: string
    TeamMemberUpdateBody:
      type: object
      required:
      - role
      properties:
        role:
          type: string
    ArrayOfTeamObject:
      type: array
      items:
        "$ref": "#/components/schemas/TeamObject"
    TeamObject:
      type: object
      properties:
        name:
          type: string
        obj_id:
          type: string
        role:
          type: string
    TeamCreateBody:
      type: object
      required:
      - name
      properties:
        name:
          type: string
        meta_data:
          type: object
    TeamUpdateBody:
      type: object
      required:
      - name
      properties:
        name:
          type: string
        meta_data:
          type: object
    SimpleAuthLoginBody:
      type: object
      required:
      - username
      - password
      properties:
        username:
          type: string
        password:
          type: string
    UserAvatarUpdateBody:
      type: object
      properties:
        avatar:
          type: string
          format: binary
    UserUpdateBody:
      type: object
      properties:
        first_name:
          type: string
        last_name:
          type: string
    UserObject:
      type: object
      properties:
        first_name:
          type: string
        last_name:
          type: string
        full_name:
          type: string
        avatar:
          type: object
          properties:
            original:
              type: string
            small:
              type: string
            medium:
              type: string
            type:
              type: string
    ErrorObject:
      type: object
      properties:
        message:
          type: string
        backtrace:
          type: string
    AccessObject:
      type: object
      properties:
        access_token:
          type: string
        renew_token:
          type: string
        expires_at:
          type: string
          format: datetime
    OrganizationObject:
      type: object
      properties:
        name:
          type: string
        logo:
          type: object
          properties:
            original:
              type: string
            small:
              type: string
            medium:
              type: string
            type:
              type: string
    OrgProfileUpdateBody:
      type: object
      required:
      - name
      properties:
        name:
          type: string
    OrgLogoUpdateBody:
      type: object
      properties:
        logo:
          type: string
          format: binary
  securitySchemes:
    authenticatedRequest:
      type: apiKey
      in: header
      name: ACCESS_TOKEN
paths:
  "/teams/{teamId}/members":
    post:
      tags:
      - authenticated
      - team_members
      summary: Add member to team
      operationId: teamMembersCreate
      description: Add member to team
      security:
      - authenticatedRequest: []
      parameters:
      - in: path
        name: teamId
        schema:
          type: string
        required: true
        description: id of team
      requestBody:
        required: true
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/TeamMemberCreateBody"
      responses:
        '200':
          description: Successfully added team member
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/TeamMemberObject"
        '422':
          description: Validation Error
        '403':
          description: Unauthenticated access
    get:
      tags:
      - authenticated
      - team_members
      summary: Get members in a team
      operationId: teamMembersIndex
      description: Get members in a team
      security:
      - authenticatedRequest: []
      parameters:
      - in: path
        name: teamId
        schema:
          type: string
        required: true
        description: id of team
      responses:
        '200':
          description: Successfully fetched teams
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ArrayOfTeamMemberObject"
        '403':
          description: Unauthenticated access
  "/teams/{teamId}/members/{userId}":
    put:
      tags:
      - authenticated
      - team_members
      summary: Update a single team member
      operationId: teamMembersUpdate
      description: Update a single team member
      security:
      - authenticatedRequest: []
      parameters:
      - in: path
        name: userId
        schema:
          type: string
        required: true
        description: id of member to update
      - in: path
        name: teamId
        schema:
          type: string
        required: true
        description: id of team
      requestBody:
        required: true
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/TeamMemberUpdateBody"
      responses:
        '200':
          description: Update Successfull
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/TeamMemberObject"
        '422':
          description: Validation Error
        '403':
          description: Unauthenticated access
    delete:
      tags:
      - authenticated
      - team_members
      summary: Delete a single team
      operationId: teamMembersDelete
      description: Delete a single team
      security:
      - authenticatedRequest: []
      parameters:
      - in: path
        name: userId
        schema:
          type: string
        required: true
        description: id of member to update
      - in: path
        name: teamId
        schema:
          type: string
        required: true
        description: id of team
      responses:
        '200':
          description: Delete Successfull
        '422':
          description: Validation Error
        '403':
          description: Unauthenticated access
  "/teams":
    post:
      tags:
      - authenticated
      - teams
      summary: Create a team
      operationId: teamsCreate
      description: Create a team
      security:
      - authenticatedRequest: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/TeamCreateBody"
      responses:
        '200':
          description: Successfully created a team
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/TeamObject"
        '422':
          description: Validation Error
        '403':
          description: Unauthenticated access
    get:
      tags:
      - authenticated
      - teams
      summary: Get my teams
      operationId: teamsIndex
      description: Get my teams
      security:
      - authenticatedRequest: []
      responses:
        '200':
          description: Successfully fetched teams
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ArrayOfTeamObject"
        '403':
          description: Unauthenticated access
  "/teams/{teamId}":
    get:
      tags:
      - authenticated
      - teams
      summary: Get single team
      operationId: teamsShow
      description: Get single team
      security:
      - authenticatedRequest: []
      parameters:
      - in: path
        name: teamId
        schema:
          type: string
        required: true
        description: id of team
      responses:
        '200':
          description: Successfully fetched team
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/TeamObject"
        '403':
          description: Unauthenticated access
    put:
      tags:
      - authenticated
      - teams
      summary: Update a single team
      operationId: teamsUpdate
      description: Update a single team
      security:
      - authenticatedRequest: []
      parameters:
      - in: path
        name: teamId
        schema:
          type: string
        required: true
        description: id of team
      requestBody:
        required: true
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/TeamUpdateBody"
      responses:
        '200':
          description: Update Successfull
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/TeamObject"
        '422':
          description: Validation Error
        '403':
          description: Unauthenticated access
    delete:
      tags:
      - authenticated
      - teams
      summary: Delete a single team
      operationId: teamsDelete
      description: Delete a single team
      security:
      - authenticatedRequest: []
      parameters:
      - in: path
        name: teamId
        schema:
          type: string
        required: true
        description: id of team
      responses:
        '200':
          description: Delete Successfull
        '422':
          description: Validation Error
        '403':
          description: Unauthenticated access
  "/auth/simple_auth":
    post:
      tags:
      - auths
      - simple_auth
      summary: Login using Simple Auth
      operationId: simpleAuthLogin
      description: Login using Simple Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/SimpleAuthLoginBody"
      responses:
        '200':
          description: Successfull Login
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/AccessObject"
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorObject"
    delete:
      tags:
      - authenticated
      - simple_auth
      summary: Logout Simple Auth
      operationId: simpleAuthLogout
      description: Logout Simple Auth
      security:
      - authenticatedRequest: []
      responses:
        '200':
          description: Logout Successfull
        '403':
          description: Unauthenticated access
  "/iam/me":
    get:
      tags:
      - authenticated
      - iam
      - iam_me
      summary: Get log'd in user's profile
      operationId: iamMe
      description: Get log'd in user's profile
      security:
      - authenticatedRequest: []
      responses:
        '200':
          description: Successfully fetched profile
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/UserObject"
        '403':
          description: Unauthenticated access
    put:
      tags:
      - authenticated
      - iam
      - iam_me
      summary: Update Log'd in user profile
      operationId: iamMeUpdate
      description: Update Log'd in user profile
      security:
      - authenticatedRequest: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/UserUpdateBody"
      responses:
        '200':
          description: Update Successfull
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/UserObject"
        '403':
          description: Unauthenticated access
  "/iam/avatar":
    post:
      tags:
      - authenticated
      - iam
      - iam_avatar
      summary: Update User Avatar Image
      operationId: iamMeUpdateAvatarImage
      description: Update User Avatar Image
      security:
      - authenticatedRequest: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              "$ref": "#/components/schemas/UserAvatarUpdateBody"
      responses:
        '200':
          description: Avatar updated successfully
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/UserObject"
        '403':
          description: Unauthenticated access
    delete:
      tags:
      - authenticated
      - iam
      - iam_avatar
      summary: Remove User Avatar Image
      operationId: iamMeRemoveAvatarImage
      description: Remove User Avatar Image
      security:
      - authenticatedRequest: []
      responses:
        '200':
          description: Avatar removed successfully
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/UserObject"
        '403':
          description: Unauthenticated access
  "/settings/organization":
    get:
      tags:
      - authenticated
      - settings
      - organization
      summary: Get organization details
      operationId: getOrganization
      description: Get organization details
      security:
      - authenticatedRequest: []
      responses:
        '200':
          description: Successfully fetched organization profile
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/OrganizationObject"
        '403':
          description: Unauthenticated access
    put:
      tags:
      - authenticated
      - settings
      - organization
      summary: Update organization profile
      operationId: updateOrganization
      description: Update organization profile
      security:
      - authenticatedRequest: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/OrgProfileUpdateBody"
      responses:
        '200':
          description: Update Successfull
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/OrganizationObject"
        '403':
          description: Unauthenticated access
  "/settings/organization/logo":
    post:
      tags:
      - authenticated
      - settings
      - organization
      summary: Update organization logo
      operationId: updateOrganizationLogo
      description: Update organization logo
      security:
      - authenticatedRequest: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              "$ref": "#/components/schemas/OrgLogoUpdateBody"
      responses:
        '200':
          description: Logo updated successfully
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/OrganizationObject"
        '403':
          description: Unauthenticated access
    delete:
      tags:
      - authenticated
      - settings
      - organization
      summary: Remove organization logo
      operationId: removeOrganizationLogo
      description: Remove organization logo
      security:
      - authenticatedRequest: []
      responses:
        '200':
          description: Logo removed successfully
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/OrganizationObject"
        '403':
          description: Unauthenticated access
